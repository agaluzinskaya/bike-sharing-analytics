summary(hour)
ncol(hour)
nrow(hour)
names(hour)
#Recode season values from 1-4 to Spring-Winter
recodev <- function(original.vector,
old.values,
new.values) {
new.vector <- original.vector
for (i in 1:length(old.values)) {
change.log <- original.vector == old.values[i] &
is.na(original.vector) == F
new.vector[change.log] <- new.values[i]
}
return(new.vector)
}
hour$season <- recodev(original.vector = hour$season,
old.values = c(1:4),
new.values = c("spring","summer","fall",
"winter"))
#Rename columns yr and mnth on year and month and recode year values (0: 2011, 1:2012)
names(hour)[4:5] <- c("year","month")
hour$year <- recodev(original.vector = hour$year,
old.values = c(0,1),
new.values = c(2011,2012))
names(hour)
#Rename hum on humidity and cnt on count
names(hour)[names(hour)=="hum"] <- "humidity"
names(hour)[names(hour)=="cnt"] <- "count"
names(hour)
#Denormalise temp and atemp
tconvert <- function(min, max, vector){
result <- vector * (max - min) + min
return (result)
}
hour$temp <- tconvert(-8, 39, hour$temp)
hour$atemp <- tconvert(-16, 50, hour$atemp)
#Convert temperature from Celcius to Fahrenheit
library(weathermetrics)
hour$temp <- celsius.to.fahrenheit(hour$temp)
hour$atemp <- celsius.to.fahrenheit(hour$atemp)
#How does temperature change over seasons? What is the mean, standard deviation and median of temperatures for each season?
library(dplyr)
hour.agg <- hour %>%
group_by(season) %>%
summarise(
temp.min = min(temp),
temp.max = max(temp),
temp.med = median(temp),
temp.stdev = sd(temp),
temp.mean = mean(temp),
count = n())
hour.agg
#How does temperature change over seasons? What is the mean, standard deviation and median of temperatures for each season?
library(dplyr)
hour.agg <- hour %>%
group_by(season) %>%
summarise(
temp.min = min(temp),
temp.max = max(temp),
temp.med = median(temp),
temp.stdev = sd(temp),
temp.mean = mean(temp),
count = n())
hour.agg
#Boxplot temperature by season
library(ggplot2)
ggplot(hour, aes(x=season, y=temp)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
#Boxplot temperature by season
library(ggplot2)
ggplot(hour, aes(x=season, y=temp, fill=season)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
#Boxplot temperature by season
library(ggplot2)
ggplot(hour, aes(x=season, y=temp, fill=season)) +
labs(title="Boxplot Temperature by Season",x="Season", y = "Temperature")+
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
#Boxplots temperature by season
library(ggplot2)
ggplot(hour, aes(x=season, y=temp, fill=season)) +
labs(title="Boxplots Temperature by Season",x="Season", y = "Temperature")+
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
geom_violin(trim=FALSE)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
geom_dotplot(binaxis='y', stackdir='center', dotsize=1) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
stat_summary(fun.data=data_summary)+
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
stat_summary(hour=data_summary)+
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
data_summary <- function(x) {
m <- mean(hour$weathersit)
ymin <- m-sd(hour$weathersit)
ymax <- m+sd(hour$weathersit)
return(c(hour$count=m,hour$count=ymin,hour$count=ymax))
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
+ stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.2 )
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)
+ geom_boxplot(width=0.1)
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.y=median, geom="point", size=2, color="red")
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.y=median, geom="line", size=2, color="black")
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.y=median, geom="point", size=2, color="black")
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.y=mean, geom="point", size=2, color="black")
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.2 )
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.data="mean_sdl",
geom="crossbar", width=0.2 )
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill=weathersit)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.y=mean, geom="point", size=2, color="black")
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count, fill='#A4A4A4', color="darkred")) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.y=mean, geom="point", size=2, color="black")
#Which weather conditions exhibit the lowet/highest number of total bike rentals?
hour$weathersit <- factor(hour$weathersit, labels = c("1", "2", "3", "4"))
ggplot(hour, aes(x=weathersit, y=count)) +
labs(title="Violin Plots of Bike Rentals by Weather Condition",x="Weather Condition", y = "Number of Rentals")+
geom_violin(trim=FALSE, fill='#A4A4A4', color="darkred")+
stat_summary(fun.y=mean, geom="point", size=2, color="black")
#Is there a correlation between the total number of rentals and season? What is the mean, median and standard deviation for total number of rentals (count) per season? Which season is the most popular for the bike rentals?
hour_df <- data.frame(spring = rep(NA, 3),
winter = rep(NA, 3),
summer = rep(NA, 3),
fall = rep(NA, 3))
row.names(hour_df) <- c("mean", "median", "sd")
vec <- c ("mean","median","sd")
for (n in vec){
for (i in unique(hour$season)) {
my.fun <- get(n)
res <- my.fun(hour$count[hour$season == i])
df[n,i] <- res
}
}
#Is there a correlation between the total number of rentals and season? What is the mean, median and standard deviation for total number of rentals (count) per season? Which season is the most popular for the bike rentals?
hour_df <- data.frame(spring = rep(NA, 3),
winter = rep(NA, 3),
summer = rep(NA, 3),
fall = rep(NA, 3))
row.names(hour_df) <- c("mean", "median", "sd")
vec <- c("mean","median","sd")
for (n in vec){
for (i in unique(hour$season)) {
my.fun <- get(n)
res <- my.fun(hour$count[hour$season == i])
df[n,i] <- res
}
}
#Is there a correlation between the total number of rentals and season? What is the mean, median and standard deviation for total number of rentals (count) per season? Which season is the most popular for the bike rentals?
hour_df <- data.frame(spring = rep(NA, 3),
winter = rep(NA, 3),
summer = rep(NA, 3),
fall = rep(NA, 3))
row.names(hour_df) <- c("mean", "median", "sd")
vec <- c("mean","median","sd")
for (n in vec){
for (i in unique(hour$season)) {
my.fun <- get(n)
res <- my.fun(hour$count[hour$season == i])
hour_df[n,i] <- res
}
}
hour_df
#Is there a correlation between the total number of rentals and season? What is the mean, median and standard deviation for total number of rentals (count) per season? Which season is the most popular for the bike rentals?
hour_df <- data.frame(fall = rep(NA, 3),
spring = rep(NA, 3),
summer = rep(NA, 3),
winter = rep(NA, 3))
row.names(hour_df) <- c("mean", "median", "sd")
vec <- c("mean","median","sd")
for (n in vec){
for (i in unique(hour$season)) {
my.fun <- get(n)
res <- my.fun(hour$count[hour$season == i])
hour_df[n,i] <- res
}
}
hour_df
#Is there a correlation between the total number of rentals and season? What is the mean, median and standard deviation for total number of rentals (count) per season? Which season is the most popular for the bike rentals?
hour_df <- data.frame(fall = rep(NA, 3),
spring = rep(NA, 3),
summer = rep(NA, 3),
winter = rep(NA, 3))
row.names(hour_df) <- c("mean", "median", "sd")
vec <- c("mean","median","sd")
for (n in vec){
for (i in unique(hour$season)) {
my.fun <- get(n)
res <- my.fun(hour$count[hour$season == i])
hour_df[n,i] <- res
}
}
hour_df
#Analysis of variance model
summary(aov(count ~ season, data = hour))
#Pairwise comparison of means for seasons
TukeyHSD(aov(count ~ season, data = hour))
#Pairwise comparison of means for seasons
pairwise.t.test(hour$count, hour$season, p.adj = "none")
#Pairwise comparison of means for seasons
TukeyHSD(aov(count ~ season, data = hour))
#Boxplots count by season
ggplot(hour, aes(x=season, y=count, fill=season)) +
labs(title="Boxplots Number of Bike Rentals by Season",x="Season", y = "Number of Rentals")+
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
#Is the correlation between feeling temperature (atemp) and number of bike rentals significant? Is there a difference between the correlations for years 2011 and 2012?
test1 <- cor.test(hour$atemp[hour$year == 2011],
hour$count[hour$year == 2011])
test1
test2 <- cor.test(hour$atemp[hour$year == 2012],
hour$count[hour$year == 2012])
test2
#scatterplot with regression lines
plot(x = 1, xlab = "Temperature", ylab = "Number of Bike Rentals", xlim = c(20,105), ylim = c(0,1000), main = "Temperature vs. Number of Bike Rentals")
points(x = hour$atemp[hour$year == 2011], y = hour$count[hour$year == 2011], pch = 19, col = "red", cex = 0.5)
points(x = hour$atemp[hour$year == 2012], y = hour$count[hour$year == 2012], pch = 19, col = "blue", cex = 0.5)
abline(lm(count~atemp, hour, subset = year == 2011), col = "blue", lwd = 3)
abline(lm(count~atemp, hour, subset = year == 2012), col = "red", lwd = 3)
legend("topleft", legend = c(2011, 2012), col = c("blue","red"), pch = c(19, 19), bg = "white", cex = 1)
#scatterplot with regression lines
plot(x = 1, xlab = "Temperature", ylab = "Number of Bike Rentals", xlim = c(10,110), ylim = c(0,1000), main = "Temperature vs. Number of Bike Rentals")
points(x = hour$atemp[hour$year == 2011], y = hour$count[hour$year == 2011], pch = 19, col = "red", cex = 0.5)
points(x = hour$atemp[hour$year == 2012], y = hour$count[hour$year == 2012], pch = 19, col = "black", cex = 0.5)
abline(lm(count~atemp, hour, subset = year == 2011), col = "black", lwd = 3)
abline(lm(count~atemp, hour, subset = year == 2012), col = "red", lwd = 3)
legend("topleft", legend = c(2011, 2012), col = c("black","red"), pch = c(19, 19), bg = "white", cex = 1)
#scatterplot with regression lines
plot(x = 1, xlab = "Temperature", ylab = "Number of Bike Rentals", xlim = c(0,120), ylim = c(0,1000), main = "Temperature vs. Number of Bike Rentals")
points(x = hour$atemp[hour$year == 2011], y = hour$count[hour$year == 2011], pch = 19, col = "red", cex = 0.5)
points(x = hour$atemp[hour$year == 2012], y = hour$count[hour$year == 2012], pch = 19, col = "black", cex = 0.5)
abline(lm(count~atemp, hour, subset = year == 2011), col = "black", lwd = 3)
abline(lm(count~atemp, hour, subset = year == 2012), col = "red", lwd = 3)
legend("topleft", legend = c(2011, 2012), col = c("black","red"), pch = c(19, 19), bg = "white", cex = 1)
#scatterplot with regression lines
plot(x = 1, xlab = "Feeling Temperature", ylab = "Number of Bike Rentals", xlim = c(0,120), ylim = c(0,1000), main = "Feeling Temperature vs. Number of Bike Rentals")
points(x = hour$atemp[hour$year == 2011], y = hour$count[hour$year == 2011], pch = 19, col = "red", cex = 0.5)
points(x = hour$atemp[hour$year == 2012], y = hour$count[hour$year == 2012], pch = 19, col = "black", cex = 0.5)
abline(lm(count~atemp, hour, subset = year == 2011), col = "black", lwd = 3)
abline(lm(count~atemp, hour, subset = year == 2012), col = "red", lwd = 3)
legend("topleft", legend = c(2011, 2012), col = c("black","red"), pch = c(19, 19), bg = "white", cex = 1)
#Is weather condition correlated to number of bike rentals? What are the summary statistics for each weather condition? How does weather condition influence the distribution of bike rentals?
lm1 <- lm(count~weathersit, hour)
summary(lm1)
w.agg <- hour %>%
group_by(weathersit) %>%
summarise(
temp.min = min(temp),
temp.max = max(temp),
temp.mean = mean(temp),
temp.stdev = sd(temp),
temp.med = median(temp),
count = n())
w.agg
#Histogram for each weather condition
vec <- c("Clear Weather", "Cloudy Weather", "Light Rain Weather", "Heavy Rain/Snow Weather")
par(mfrow = c(2, 2))
for (i in c(1:4)){
name.i <- vec[i]
ggplot(data=hour, aes(hour$count[hour$weathersit == i])) +
geom_histogram(breaks=10,
col="red",
fill="green",
alpha = .2) +
labs(name.i) +
labs(x="Age", y="Count")
}
#Histogram for each weather condition
vec <- c("Clear Weather", "Cloudy Weather", "Light Rain Weather", "Heavy Rain/Snow Weather")
par(mfrow = c(2, 2))
hist <- for (i in c(1:4)){
name.i <- vec[i]
ggplot(data=hour, aes(hour$count[hour$weathersit == i])) +
geom_histogram(breaks=10,
col="red",
fill="green",
alpha = .2) +
labs(name.i) +
labs(x="Age", y="Count")
}
hist
#Histogram for each weather condition
par(mfrow = c(2, 2))
ggplot(data=hour, aes(hour$count[hour$weathersit == 1])) + geom_histogram(breaks=10, col="black", fill="green", alpha = .2) +
labs(title = "Clear Weather") +
labs(x="Number of Rentals", y="Frequency")
#Histogram for each weather condition
par(mfrow = c(2, 2))
for (i in c(1:4)){
name.i <- vec[i]
hist(hour$count[hour$weathersit == i],
main = name.i,
xlab = "Number of Rents",
ylab = "Frequency",
breaks = 10,
col = "yellow3",
border = "black")
# the line indicating median value
abline(v = median(hour$count[hour$weathersit == i]),
col = "black",
lwd = 3,
lty = 2)
# the line indicating mean value
abline(v = mean(hour$count[hour$weathersit == i]),
col = "blue",
lwd = 3,
lty = 2)
}
#Histogram for each weather condition
vec <- c("Clear Weather", "Cloudy Weather", "Light Rain Weather", "Heavy Rain/Snowy Weather")
par(mfrow = c(2, 2))
for (i in c(1:4)){
name.i <- vec[i]
hist(hour$count[hour$weathersit == i],
main = name.i,
xlab = "Number of Rents",
ylab = "Frequency",
breaks = 10,
col = "green",
border = "black")
# the line indicating median value
abline(v = median(hour$count[hour$weathersit == i]),
col = "black",
lwd = 3,
lty = 2)
# the line indicating mean value
abline(v = mean(hour$count[hour$weathersit == i]),
col = "blue",
lwd = 3,
lty = 2)
}
#Histogram for each weather condition
vec <- c("Clear Weather", "Cloudy Weather", "Light Rain Weather", "Heavy Rain/Snowy Weather")
par(mfrow = c(2, 2))
for (i in c(1:4)){
name.i <- vec[i]
hist(hour$count[hour$weathersit == i],
main = name.i,
xlab = "Number of Rents",
ylab = "Frequency",
breaks = 10,
col = "lightgreen",
border = "black")
# the line indicating median value
abline(v = median(hour$count[hour$weathersit == i]),
col = "black",
lwd = 3,
lty = 2)
# the line indicating mean value
abline(v = mean(hour$count[hour$weathersit == i]),
col = "blue",
lwd = 3,
lty = 2)
}
#Histogram for each weather condition
vec <- c("Clear Weather", "Cloudy Weather", "Light Rain Weather", "Heavy Rain/Snowy Weather")
par(mfrow = c(2, 2))
for (i in c(1:4)){
name.i <- vec[i]
hist(hour$count[hour$weathersit == i],
main = name.i,
xlab = "Number of Rents",
ylab = "Frequency",
breaks = 10,
col = "grey",
border = "black")
# the line indicating median value
abline(v = median(hour$count[hour$weathersit == i]),
col = "black",
lwd = 3,
lty = 2)
# the line indicating mean value
abline(v = mean(hour$count[hour$weathersit == i]),
col = "blue",
lwd = 3,
lty = 2)
}
#Is there a significant difference between total number bike rentals on holidays and working days?
tTest1 <- t.test(hour$count[hour$holiday == 0],
hour$count[hour$holiday == 1])
tTest1
ggplot(hour, aes(x=holiday, y=count)) +
labs(title="Violin Plots of Bike Rentals by Type of Day", x = "Type of Day", y = "Number of Rentals")+
geom_violin(trim=FALSE, fill='#A4A4A4', color="darkred")+
stat_summary(fun.y=mean, geom="point", size=2, color="black")
hour$weathersit <- factor(hour$weathersit, labels = c("0", "1"))
hour$holiday <- factor(hour$weathersit, labels = c("0", "1"))
hour$holiday <- factor(hour$holiday, labels = c("0", "1"))
ggplot(hour, aes(x=holiday, y=count)) +
labs(title="Violin Plots of Bike Rentals by Type of Day", x = "Type of Day", y = "Number of Rentals")+
geom_violin(trim=FALSE, fill='#A4A4A4', color="darkred")+
stat_summary(fun.y=mean, geom="point", size=2, color="black")
hour$holiday <- factor(hour$holiday, labels = c("0", "1"))
ggplot(hour, aes(x=holiday, y=count, fill=holiday)) +
labs(title="Violin Plots of Bike Rentals by Type of Day", x = "Type of Day", y = "Number of Rentals")+
geom_violin(trim=FALSE)+
stat_summary(fun.y=mean, geom="point", size=2, color="black")
hour$holiday <- factor(hour$holiday, labels = c("0", "1"))
ggplot(hour, aes(x=holiday, y=count, fill=holiday)) +
labs(title="Violin Plots of Bike Rentals by Type of Day", x = "Type of Day", y = "Number of Rentals")+
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
hour$holiday <- factor(hour$holiday, labels = c("0", "1"))
ggplot(hour, aes(x=holiday, y=count, fill=holiday)) +
labs(title="Boxplots of Bike Rentals by Type of Day", x = "Type of Day", y = "Number of Rentals")+
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
qplot(hour$weekday, geom="histogram", binwidth = 0.5)
#Is there a significant difference between total number bike rentals on holidays and working days?
tTest1 <- t.test(hour$count[hour$workingday == 1],
hour$count[hour$workingday == 0])
tTest1
hour$workingday <- factor(hour$workingday, c(1, 0), labels = c("1", "0"))
ggplot(hour, aes(x=workingday, y=count, fill=workingday)) +
labs(title="Boxplots of Bike Rentals by Type of Day", x = "Type of Day", y = "Number of Rentals")+
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
hour$workingday <- factor(hour$workingday, c(1, 0))
ggplot(hour, aes(x=workingday, y=count, fill=workingday)) +
labs(title="Boxplots of Bike Rentals by Type of Day", x = "Type of Day", y = "Number of Rentals")+
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
